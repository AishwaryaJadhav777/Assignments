1. Write a program to remove duplicate elements from the array of integers.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace RemoveDuplicate
{
    class Program
    {
        static void Main(string[] args)
        {
            int i, j,k;
            Console.WriteLine("Enter the size of array:");
            int n = Convert.ToInt32(Console.ReadLine());

            int[] num = new int[n];
            Console.WriteLine("Enter numbers:");

            for (i = 0; i < num.Length; i++)
            {
                num[i] = Convert.ToInt32(Console.ReadLine());
            }
            Console.WriteLine("New Array:");
            for(i=0;i<n;i++)
            {
                for(j=i+1;j<n;j++)
                {
                    if(num[j]==num[i])
                    {
                        for(k=j;k<n;k++)
                        {
                            num[k] = num[k + 1];
                        }
                        n--;
                    }
                    else
                    {
                        j++;
                    }
                }
            }
            for(i=0;i<n;i++)
            {
                Console.WriteLine(num[i]);
            }
            Console.ReadLine();

        }
    }
}


2. Write a program to count how many numbers of times each character appears/present in the given string.

Ex: given string = â€œhello wordâ€�

   Output:
     h.....1
     e.....1
     l......2
     o.....2
     w....1
     r.....1
     d...1

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NumberOfOccurance
{
    class Program
    {
        static void Main(string[] args)
        {
            string str;
            Console.WriteLine("Enter the String:");
            str = Console.ReadLine();
            

            while (str.Length > 0)
            {
                Console.Write(str[0] + " = ");
                int cal = 0;
                for (int j = 0; j < str.Length; j++)
                {
                    if (str[0] == str[j])
                    {
                        cal++;
                    }
                }
                Console.WriteLine(cal);
                str = str.Replace(str[0].ToString(), String.Empty);
            }
            Console.ReadLine();
        }
    }
}



3. Write a function to get largest number in the given array.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LargestNumber
{
    class Program
    {
        static void Main(string[] args)
        {
            Largest l = new Largest();
            l.Display();
        }

    }



    class Largest
    {
        public void Display()
        { 
            int i, largest;

            Console.WriteLine("Enter the size of array:");
            int n = Convert.ToInt32(Console.ReadLine());

            int[] num = new int[n];
            Console.WriteLine("Enter numbers:");

            for ( i = 0; i < num.Length; i++)
            {
                num[i] = Convert.ToInt32(Console.ReadLine());
            }
            


            largest = num[0];
            for(i=1;i<n;i++)
            {
                if (largest < num[i])
                    largest = num[i];
            }
            Console.WriteLine("Largest Element in array:{0}", largest);
            Console.ReadLine();
        }
    }
        
    }







4. Write a program to find whether a given 3 digit number is an Armstrong number or not.


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ArmStrongNumber
{
    class Program
    {
        static void Main(string[] args)
        {

            int val, sum=0, rem;
            Console.WriteLine("Enter Number:");
            val = Convert.ToInt32(Console.ReadLine());

            for(int i=val;i>0;i=i/10)
            {
                rem = i % 10;
                sum = sum + rem * rem * rem;
            }
            if(sum==val)
            {
                Console.WriteLine("Armstrong Number");
            }
            else
            {
                Console.WriteLine("Not Armstrong Number");
            }
            Console.ReadLine();


        }
    }
}



5. Write a program to generate the first n terms in the series
1, 8, 27, 64, 125

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Cube
{
    class Program
    {
        static void Main(string[] args)
        {
            int n, i = 1;
            Console.WriteLine("Enter the Range of Number:");
            n = Convert.ToInt32(Console.ReadLine());
            while(i<=n)
            {
                Console.WriteLine(i * i * i);
                i++;
            }
            Console.ReadLine();
        }
    }
}



6. Write a program to generate the first n prime numbers in the series
2,3,5,7,11,..., 17

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PrimeNumber
{
    class Program
    {
        static void Main(string[] args)
        {
            int i,j,fact;

            Console.WriteLine("Enter the size of array:");
            int n = Convert.ToInt32(Console.ReadLine());

            int[] num = new int[n];
            Console.WriteLine("Prime numbers:");

            for (i = 0; i < num.Length; i++)
            {
                fact = 0;
                for(j=1;j<=n;j++)
                {
                    if (i % j == 0)
                        fact++;
                }
                if (fact == 2)
                    Console.WriteLine("{0}", i);
                
            }
            Console.ReadLine();

        }
    }
}





7. The Goal is
to print the given pattern as follows based on the number of lines as input.
1 2 3 4 5
1 2 3 4
1 2 3
1 2
1

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Pyramid1
{
    class Program
    {
        static void Main(string[] args)
        {
            int n = 5;
            int i, j;
            for (i = n; i >= 1; i--)
            {

                for (j = 1; j <= i; j++)
                {

                    Console.Write(j);


                }
                Console.Write("\n");

            }

            Console.ReadLine();

        }
    }
}


8. Write a program to print the below pattern.
        5
      4 5 4
    3 4 5 4 3
  2 3 4 5 4 3 2
1 2 3 4 5 4 3 2 1

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Pyramid3
{
    class Program
    {
        static void Main(string[] args)
        {

            int i, j, n=5;
            for (i = n; i >=1; i--)
            {
                for (j = 1; j <=i-1; j++)
                {
                    Console.Write("\t");
                }
                for (j = i; j <= n; j++)
                {
                    Console.Write(j);
                    Console.Write("\t");
                }
                for (j = n-1; j >= i; j--)
                {
                    Console.Write(j);
                    Console.Write("\t");
                }
                Console.Write("\n");
                
            }
            Console.ReadLine();
        }
    }
}


9. Write a program to print the below pattern.

1 2 3 4 5 6 5 4 3 2 1
  1 2 3 4 5 4 3 2 1
    1 2 3 4 3 2 1
      1 2 3 2 1
        1 2 1
          1

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace pyramid2
{
    class Program
    {
        static void Main(string[] args)
        {
            int i, j, space = 0;
            for(i=6;i>=1;i--)
            {
                for(j=1; j<=space;j++)
                {
                    Console.Write(" ");
                }
                for(j=1;j<=i;j++)
                {
                    Console.Write(j);
                }
                for(j=i-1;j>=1;j--)
                {
                    Console.Write(j);
                }
                Console.Write("\n");
                space++;
            }
            Console.ReadLine();
        }
    }
}


		  
10. Write a program in take 10 integer in an array and sort in ascending order.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AsendingOrder
{
    class Program
    {
        static void Main(string[] args)
        {
            //int[] array = new int[10];
            //Console.WriteLine("Enter number:");
            //int n = Convert.ToInt32(Console.ReadLine());
            int i, j, temp;

            Console.WriteLine("Enter the Size of array:");
            int n = Convert.ToInt32(Console.ReadLine());

            int[] array = new int[n];
            Console.WriteLine("Enter numbers:");

            for ( i = 0; i < array.Length; i++)
            {
                array[i] = Convert.ToInt32(Console.ReadLine());
            }
            
            for(i=0;i<
                n;i++)
            {
                for(j=i+1;j<n;j++)
                {
                    if(array[j]<array[i])
                    {
                        temp = array[i];
                        array[i] = array[j];
                        array[j] = temp;
                    }
                }
            }
            Console.WriteLine("Array in Asending Order:");
            for (i=0;i<n;i++)
            {
                Console.WriteLine("{0}",array[i]);
            }
            Console.ReadLine();
        }
    }
}



